// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "support@monserv.local"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/alerts/active": {
            "get": {
                "description": "Get list of all currently active alerts across all servers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Alerts"
                ],
                "summary": "Get all active alerts",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved active alerts",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.AlertResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/health": {
            "get": {
                "description": "Get simplified health status (online/offline/warning/alert) for all servers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get health status of all servers",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved health status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.HealthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/servers": {
            "get": {
                "description": "Get list of all servers being monitored with their current status and metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Get all monitored servers",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved server list",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ServerListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/servers/metrics": {
            "get": {
                "description": "Get detailed metrics for a specific server by URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Get metrics for specific server",
                "parameters": [
                    {
                        "type": "string",
                        "example": "ssh://scada:@Grita123@192.168.4.3:2222",
                        "description": "Server URL",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved server metrics",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ServerMetricsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - URL parameter missing",
                        "schema": {
                            "$ref": "#/definitions/dto.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Server not found",
                        "schema": {
                            "$ref": "#/definitions/dto.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dto.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.AlertResponse": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string",
                    "example": "scadanas"
                },
                "id": {
                    "type": "string",
                    "example": "ssh://scada:***@192.168.4.3:2222|mem"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Memory used 85.0% (threshold 80.0%)"
                },
                "resolved_at": {
                    "type": "string",
                    "example": "2025-10-29T13:00:00Z"
                },
                "server_url": {
                    "type": "string",
                    "example": "ssh://scada:***@192.168.4.3:2222"
                },
                "severity": {
                    "type": "string",
                    "enum": [
                        "warning",
                        "critical"
                    ],
                    "example": "critical"
                },
                "subject": {
                    "type": "string",
                    "example": "[ALERT] scadanas memory high"
                },
                "triggered_at": {
                    "type": "string",
                    "example": "2025-10-29T12:00:00Z"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "memory",
                        "disk",
                        "process"
                    ],
                    "example": "memory"
                }
            }
        },
        "dto.DiskResponse": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "string",
                    "example": "/dev/sda1"
                },
                "free_bytes": {
                    "type": "integer",
                    "example": 53687091200
                },
                "fstype": {
                    "type": "string",
                    "example": "ext4"
                },
                "mountpoint": {
                    "type": "string",
                    "example": "/"
                },
                "total_bytes": {
                    "type": "integer",
                    "example": 107374182400
                },
                "used_bytes": {
                    "type": "integer",
                    "example": 53687091200
                },
                "used_percent": {
                    "type": "number",
                    "example": 50
                }
            }
        },
        "dto.HealthResponse": {
            "type": "object",
            "properties": {
                "alerts": {
                    "type": "integer",
                    "example": 2
                },
                "offline": {
                    "type": "integer",
                    "example": 1
                },
                "online": {
                    "type": "integer",
                    "example": 3
                },
                "servers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.ServerHealthInfo"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ok",
                        "degraded",
                        "error"
                    ],
                    "example": "ok"
                },
                "total": {
                    "type": "integer",
                    "example": 4
                }
            }
        },
        "dto.MemoryResponse": {
            "type": "object",
            "properties": {
                "free_bytes": {
                    "type": "integer",
                    "example": 4294967296
                },
                "total_bytes": {
                    "type": "integer",
                    "example": 8589934592
                },
                "used_bytes": {
                    "type": "integer",
                    "example": 4294967296
                },
                "used_percent": {
                    "type": "number",
                    "example": 50
                }
            }
        },
        "dto.ProcessResponse": {
            "type": "object",
            "properties": {
                "cmdline": {
                    "type": "string",
                    "example": "postgres -D /var/lib/postgresql/data"
                },
                "name": {
                    "type": "string",
                    "example": "postgres"
                },
                "percent_ram": {
                    "type": "number",
                    "example": 6.25
                },
                "pid": {
                    "type": "integer",
                    "example": 1234
                },
                "rss_bytes": {
                    "type": "integer",
                    "example": 536870912
                },
                "username": {
                    "type": "string",
                    "example": "postgres"
                }
            }
        },
        "dto.ServerHealthInfo": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string",
                    "example": "scadanas"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "online",
                        "offline",
                        "warning",
                        "alert"
                    ],
                    "example": "online"
                },
                "url": {
                    "type": "string",
                    "example": "ssh://scada:***@192.168.4.3:2222"
                }
            }
        },
        "dto.ServerListResponse": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ServerStatusResponse"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 4
                }
            }
        },
        "dto.ServerMetricsResponse": {
            "type": "object",
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DiskResponse"
                    }
                },
                "generated_at_utc": {
                    "type": "string",
                    "example": "2025-10-29T12:00:00Z"
                },
                "hostname": {
                    "type": "string",
                    "example": "scadanas"
                },
                "memory": {
                    "$ref": "#/definitions/dto.MemoryResponse"
                },
                "top_processes_by_memory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProcessResponse"
                    }
                },
                "uptime_seconds": {
                    "type": "integer",
                    "example": 3600
                }
            }
        },
        "dto.ServerStatusResponse": {
            "type": "object",
            "properties": {
                "last_update": {
                    "type": "string",
                    "example": "2025-10-29T12:00:00Z"
                },
                "metrics": {
                    "$ref": "#/definitions/dto.ServerMetricsResponse"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "online",
                        "offline",
                        "warning",
                        "alert"
                    ],
                    "example": "online"
                },
                "url": {
                    "type": "string",
                    "example": "ssh://scada:***@192.168.4.3:2222"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "MonServ API",
	Description:      "Server Monitoring System REST API for Mobile Integration\n\n## WebSocket Real-Time Updates\nConnect to WebSocket endpoint `/ws` for real-time metrics and alerts.\nExample: `ws://your-server-host:port/ws`\nSee `/docs/WEBSOCKET_API.md` for complete documentation.\n\n## Dynamic Host Support\nAPI dapat diakses dari mana saja. Swagger UI akan auto-detect host.\nSet environment variable `API_HOST` untuk override (optional).",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
